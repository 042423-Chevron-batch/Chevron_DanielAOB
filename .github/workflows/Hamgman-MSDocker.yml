name: CI for Hangman Game


on:
  push:
   branches: ["main"]
   #paths:
      #- HangmanMSDocker/**
  pull_request:
   branches: ["main"]
  workflow_dispatch: 
  
  
jobs:
  buildMultistage:
       runs-on: ubuntu-latest
       env:
         WORKING_DIR: HangmanMSDocker
       steps:
       - name: checkout git repo
         uses: actions/checkout@v3
         
       - name: login to docker
         uses: docker/login-action@v2
         with:
          username: ${{ secrets.docker_name_user }}
          password: ${{ secrets.DOCKERHUB }}
         
       #- name: build docker image
         #run:  docker build -t 10402033/hangmanmultistage:latest ${{ env.WORKING_DIR }}
       
       - name: Set up QEMU
         uses: docker/setup-buildx-action@v2
       
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2
         
       - name: Build and push
         uses: docker/build-push-action@v4
         with:
          context: ${{ env.WORKING_DIR }}
          push: true
          tags: 10402033/hangmanmultistage:v2
          
       
       - name: Upload artifact for deployment job
         uses: actions/upload-artifact@v2
         with:
          name: .net-app
          path: Hangman
          context: ${{ env.WORKING_DIR }}
          
          
          
  deploy:
    runs-on: ubuntu-latest
    needs: buildMultistage
    environment:
      name: 'Hangman Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from buildMultistage job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          context: ${{ env.WORKING_DIR }}
        
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'danielsapi'
          #context: ${{ env.WORKING_DIR }}
          slot-name: 'Hangman Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_36208D607FB74012A2EAAD0E60DF3791 }}
          package: ${{ env.WORKING_DIR }}
         
    
        
   

   
  
     
 
   

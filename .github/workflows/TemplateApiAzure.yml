
name: Continuous integration for template APi

on:
  push:
   branches: ["main"]
   #paths:
      #- TemplateApi/**
  pull_request:
   branches: ["main"]
  workflow_dispatch: 
  
  
jobs:
  TemplateApiMulti:
       runs-on: ubuntu-latest
       env:
         WORKING_DIR: TemplateApi
       steps:
       - name: checkout git repo
         uses: actions/checkout@v3
         
       - name: login to docker
         uses: docker/login-action@v2
         with:
          username: ${{ secrets.docker_name_user }}
          password: ${{ secrets.DOCKERHUB }}
         
       #- name: build docker image
         #run:  docker build -t 10402033/hangmanmultistage:latest ${{ env.WORKING_DIR }}
       
       - name: Set up QEMU
         uses: docker/setup-buildx-action@v2
       
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2
         
       - name: Build and push
         uses: docker/build-push-action@v4
         with:
          context: ${{ env.WORKING_DIR }}
          push: true
          tags: 10402033/templateapi:${{ github.sha }}-${{ env.RANDOM_TAG }}

       
      # - name: Upload artifact for deployment job
        # uses: actions/upload-artifact@v2
        # with:
         # name: .net-app
          #path: Template
          #context: ${{ env.WORKING_DIR }}
          
      
          
  deploy:
    runs-on: ubuntu-latest
    needs: TemplateApiMulti
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Container Instances
        uses: azure/aci-deploy@v1
        with:
          #resource-group: my-resource-group
          #dns-name-label: my-container-instance
          image: 10402033/templateapi:${{ github.sha }}-${{ env.RANDOM_TAG }}
          registry-login-server: myregistry.azurecr.io
      
          container-name: templatapi-container
          container-ports: 80
          publish-profile: ${{ secrets.TEMPLETEAPICONTAINTER }}
          package: .
        

        
   

   
  
     
 
   
